[gd_scene load_steps=48 format=3 uid="uid://cchob1q6jteq7"]

[ext_resource type="Texture2D" uid="uid://b8hkkaumaed5a" path="res://assets/SelielTheShaper_Art/Download_Livestock/livestock_pig_base_v01.png" id="1_xq0uv"]
[ext_resource type="Texture2D" uid="uid://bwq06pdsyymct" path="res://assets/custom/sitting pig wiggle.png" id="2_4eh0m"]
[ext_resource type="Texture2D" uid="uid://ckgim8ivf0hnn" path="res://assets/custom/lying pig sleep.png" id="3_gtllg"]
[ext_resource type="Texture2D" uid="uid://cppypahohm4x6" path="res://assets/custom/lying pig wiggle.png" id="4_sby3v"]
[ext_resource type="Texture2D" uid="uid://bwprlc6d7lejt" path="res://assets/custom/snoring pig.png" id="5_vcwvn"]

[sub_resource type="GDScript" id="GDScript_4h335"]
script/source = "extends CharacterBody2D

\"\"\"constants\"\"\"
const ACCELERATION = 300
const MAX_SPEED = 50
const TOLERANCE = 4.0 # this will let the pig float around the target point

\"\"\"enums\"\"\"
enum {
	IDLE,
	WANDER,
	HUNGRY,
	EATING
}

\"\"\"enum orient_lr {
	LEFT,
	RIGHT
}
enum orient_td {
	TOP,
	DOWN
}\"\"\"

\"\"\"non-exported variables\"\"\"
var state = IDLE

\"\"\"exported variables\"\"\"
@export var hunger = 0
@export var health = 10

\"\"\"onready variables\"\"\"
@onready var stats = $Stats
@onready var start_position = global_position
@onready var target_position = global_position
@onready var island_map : TileMap = $\"../../IslandMap\"
@onready var world : Node2D = $\"../..\"

\"\"\"Standard Functions\"\"\"

func _ready():
	get_node(\"AnimatedSprite2D\").play(\"Sleep\")
	
func _process(delta):
	hunger == 10
	update_state()

\"\"\"Custom Functions\"\"\"

# return only local map position
func get_local_map_position(pos):
	var map_position = island_map.local_to_map(pos)
	
	return map_position 

# return local tile data
func get_local_map_tile_data(pos):
	var map_position = island_map.local_to_map(pos)
	var tile_data = island_map.get_cell_tile_data(0, Vector2i(map_position))
	#var test_data = tile_data.get_custom_data(\"Underbrush\")
	
	return tile_data

# Check state, check if hungry -> if hungry and if no food available, change state to roaming
func update_state():
	match state:
		IDLE:
			get_node(\"AnimatedSprite2D\").play(\"Sit\")
			# if IDLE and getting hungry, change state to hungry
			if hunger > 5:
				state = HUNGRY

		HUNGRY:
			get_node(\"AnimatedSprite2D\").play(\"Sit\")
			# pull underbrush stats from current tile out of games data layer
			var tile_coords = get_local_map_position(self.position)
			#print(\"Pig now at {0}\".format([tile_coords]))
			var available_underbrush = Game.data_layer[tile_coords][\"underbrush\"]
			#print(\"At this tile, {0} underbrush is left\".format([available_underbrush]))
			
			# check if enough underbrush for eating
			if available_underbrush >= 10:
				# this is eating action -> should be own function, probably
				var new_underbrush = available_underbrush - 5
				# go to data layer and change data
				Game.data_layer[tile_coords][\"underbrush\"] = new_underbrush
			
				if new_underbrush < 10:
					# here comes the tile conversion algo
					# should also be its own func probably handled in another script
					Game.data_layer[tile_coords][\"type\"] = \"forest\"
					Game.data_layer[tile_coords][\"atlas_coord\"] = Vector2i(0, 0)
					Game.data_layer[tile_coords][\"forest\"] = 0
					island_map.set_cell(0, tile_coords, 3, Vector2i(0, 0))
			
				state = IDLE
			else:
				state = WANDER
				update_target_position()


	# do I have to say something about wander too?! its only used for moving,
	# so Id like to have it in the physics function (or do I?)
	
	
# find a new RAndOM! target to move to
func update_target_position():
	var target_vector = Vector2(randi_range(-200, 200), randi_range(-200, 200))
	target_position = start_position + target_vector
	
		
func is_at_target_position(): 
	# Stop moving when at target +/- tolerance -> not super precise targetting
	return (target_position - global_position).length() < TOLERANCE
	get_node(\"AnimatedSprite2D\").play(\"Eat_r\")

func _physics_process(delta):
	match state:
		WANDER:
			accelerate_to_point(target_position, ACCELERATION * delta)

			if is_at_target_position():
				decelerate_at_point(target_position, ACCELERATION * delta)
				#print(position, global_position)
				state = IDLE

	move_and_slide()

func accelerate_to_point(point, acceleration_scalar):
	var direction = (point - global_position).normalized()
	var acceleration_vector = direction * acceleration_scalar
	accelerate(acceleration_vector)

func accelerate(acceleration_vector):
	velocity += acceleration_vector
	velocity = velocity.limit_length(MAX_SPEED)

# deceleration to 0 or very low value to tweak floating around target point
func decelerate_at_point(point, acceleration_scalar):
	var direction = (point - global_position).normalized()
	var acceleration_vector = direction * acceleration_scalar
	velocity -= acceleration_vector
	velocity = velocity.limit_length(0) # makes pig float slightly at target pos
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_eqjf0"]
radius = 5.99999
height = 16.0

[sub_resource type="AtlasTexture" id="AtlasTexture_iue3n"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 464, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_v4pey"]
atlas = ExtResource("1_xq0uv")
region = Rect2(16, 464, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_rnu66"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7qm5l"]
atlas = ExtResource("1_xq0uv")
region = Rect2(16, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_hsq8t"]
atlas = ExtResource("1_xq0uv")
region = Rect2(16, 400, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_1wgo4"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 400, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_0k48h"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_767mq"]
atlas = ExtResource("1_xq0uv")
region = Rect2(16, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_pcwmr"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 16, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_df6xf"]
atlas = ExtResource("1_xq0uv")
region = Rect2(144, 16, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ylh8g"]
atlas = ExtResource("1_xq0uv")
region = Rect2(208, 16, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_mpqih"]
atlas = ExtResource("1_xq0uv")
region = Rect2(272, 16, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_gifjn"]
atlas = ExtResource("1_xq0uv")
region = Rect2(336, 16, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_uafox"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_dry6y"]
atlas = ExtResource("1_xq0uv")
region = Rect2(144, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_5xjen"]
atlas = ExtResource("1_xq0uv")
region = Rect2(208, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7tnxn"]
atlas = ExtResource("1_xq0uv")
region = Rect2(272, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_us4fe"]
atlas = ExtResource("1_xq0uv")
region = Rect2(336, 208, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_64rrj"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_sjiho"]
atlas = ExtResource("1_xq0uv")
region = Rect2(144, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_wo4lp"]
atlas = ExtResource("1_xq0uv")
region = Rect2(208, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_731tp"]
atlas = ExtResource("1_xq0uv")
region = Rect2(272, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ufnma"]
atlas = ExtResource("1_xq0uv")
region = Rect2(336, 144, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_1onl1"]
atlas = ExtResource("1_xq0uv")
region = Rect2(80, 80, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_vxr82"]
atlas = ExtResource("1_xq0uv")
region = Rect2(144, 80, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_jhg1h"]
atlas = ExtResource("1_xq0uv")
region = Rect2(208, 80, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_px2om"]
atlas = ExtResource("1_xq0uv")
region = Rect2(272, 80, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_rfc86"]
atlas = ExtResource("1_xq0uv")
region = Rect2(336, 80, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_c65yc"]
atlas = ExtResource("2_4eh0m")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_h04th"]
atlas = ExtResource("2_4eh0m")
region = Rect2(0, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_rl5vc"]
atlas = ExtResource("2_4eh0m")
region = Rect2(0, 64, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qq7qx"]
atlas = ExtResource("3_gtllg")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_67ecx"]
atlas = ExtResource("3_gtllg")
region = Rect2(0, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ktluq"]
atlas = ExtResource("4_sby3v")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_lubx2"]
atlas = ExtResource("5_vcwvn")
region = Rect2(32, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_tevlb"]
atlas = ExtResource("5_vcwvn")
region = Rect2(0, 64, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ben6k"]
atlas = ExtResource("5_vcwvn")
region = Rect2(0, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_s5cuy"]
atlas = ExtResource("4_sby3v")
region = Rect2(0, 32, 32, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_wqbco"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_iue3n")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v4pey")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_iue3n")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v4pey")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rnu66")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7qm5l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7qm5l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rnu66")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rnu66")
}],
"loop": true,
"name": &"Eat_l",
"speed": 3.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_hsq8t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1wgo4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hsq8t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1wgo4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0k48h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_767mq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_767mq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0k48h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0k48h")
}],
"loop": true,
"name": &"Eat_r",
"speed": 3.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_pcwmr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_df6xf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ylh8g")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mpqih")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gifjn")
}],
"loop": true,
"name": &"Move_d",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_uafox")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dry6y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5xjen")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7tnxn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_us4fe")
}],
"loop": true,
"name": &"Move_l",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_64rrj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sjiho")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wo4lp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_731tp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ufnma")
}],
"loop": true,
"name": &"Move_r",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_1onl1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vxr82")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jhg1h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_px2om")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rfc86")
}],
"loop": true,
"name": &"Move_u",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_c65yc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c65yc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h04th")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c65yc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h04th")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c65yc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h04th")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rl5vc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h04th")
}],
"loop": true,
"name": &"Sit",
"speed": 3.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qq7qx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_67ecx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_67ecx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qq7qx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ktluq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_67ecx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_67ecx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lubx2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tevlb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ben6k")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_s5cuy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qq7qx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ktluq")
}],
"loop": true,
"name": &"Sleep",
"speed": 1.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_18n86"]
radius = 32.1403

[node name="Pig" type="CharacterBody2D"]
z_index = 4
collision_layer = 4
script = SubResource("GDScript_4h335")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
position = Vector2(-1, 0)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_eqjf0")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
position = Vector2(6.77626e-21, 6.77626e-21)
sprite_frames = SubResource("SpriteFrames_wqbco")
animation = &"Eat_l"
frame_progress = 0.202965

[node name="Area2D" type="Area2D" parent="."]
visible = false
collision_layer = 2
collision_mask = 2

[node name="ForestDetection" type="CollisionShape2D" parent="Area2D"]
shape = SubResource("CircleShape2D_18n86")
debug_color = Color(0.384314, 0.6, 0.376471, 0.419608)
metadata/_edit_lock_ = true
